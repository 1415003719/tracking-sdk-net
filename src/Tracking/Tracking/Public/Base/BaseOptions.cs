/*
 * This code was auto generated by AfterShip SDK Generator.
 * Do not edit the class manually.
 */

using System.Collections.Generic;

namespace Tracking;

public class BaseOptions
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="BaseOptions" /> class.
    /// </summary>
    public BaseOptions()
    {
        QueryParams = new List<KeyValuePair<string, string>>();
        HeaderParams = new List<KeyValuePair<string, string>>();
        Body = null;
    }

    /// <summary>
    ///     Initializes a new instance of the <see cref="BaseOptions" /> class with specified parameters.
    /// </summary>
    /// <param name="queryParams">The initial query parameters.</param>
    /// <param name="headerParams">The initial header parameters.</param>
    /// <param name="body">The initial body content.</param>
    public BaseOptions(List<KeyValuePair<string, string>> queryParams, List<KeyValuePair<string, string>> headerParams,
        string body)
    {
        this.QueryParams = queryParams;
        this.HeaderParams = headerParams;
        this.Body = body;
    }

    /// <summary>
    ///     Gets the query parameters.
    /// </summary>
    public List<KeyValuePair<string, string>> QueryParams { get; set; }

    /// <summary>
    ///     Gets the header parameters.
    /// </summary>
    public List<KeyValuePair<string, string>> HeaderParams { get; set; }

    /// <summary>
    ///     Gets or sets the body content.
    /// </summary>
    public string Body { get; set; }

    /// <summary>
    ///     Adds a query parameter.
    /// </summary>
    /// <param name="key">The key of the query parameter.</param>
    /// <param name="value">The value of the query parameter.</param>
    public void AddQueryParam(string key, string value)
    {
        QueryParams.Add(new KeyValuePair<string, string>(key, value));
    }

    /// <summary>
    ///     Adds a header parameter.
    /// </summary>
    /// <param name="key">The key of the header parameter.</param>
    /// <param name="value">The value of the header parameter.</param>
    public void AddHeaderParam(string key, string value)
    {
        HeaderParams.Add(new KeyValuePair<string, string>(key, value));
    }

    /// <summary>
    ///     Gets the query parameters.
    /// </summary>
    /// <returns>A list of query parameters.</returns>
    public virtual List<KeyValuePair<string, string>> GetQueryParams()
    {
        return QueryParams;
    }

    /// <summary>
    ///     Gets the header parameters.
    /// </summary>
    /// <returns>A list of header parameters.</returns>
    public virtual List<KeyValuePair<string, string>> GetHeaderParams()
    {
        return HeaderParams;
    }

    /// <summary>
    ///     Gets the body content.
    /// </summary>
    /// <returns>The body content.</returns>
    public virtual string GetBody()
    {
        return Body;
    }
}
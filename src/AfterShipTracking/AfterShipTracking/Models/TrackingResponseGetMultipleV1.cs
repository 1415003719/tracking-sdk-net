/*
 * This code was auto generated by AfterShip SDK Generator.
 * Do not edit the class manually.
 */
using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace AfterShipTracking
{
    /// <summary>
    /// Tracking response for getting tracking
    /// </summary>
    public class  TrackingResponseGetMultipleV1
    {
        /// <summary>
        ///  Meta Meta data
        /// </summary>
        [JsonProperty("meta")]
        public MetaV1  Meta { get; set; }
        /// <summary>
        ///  Data 
        /// </summary>
        [JsonProperty("data",NullValueHandling = NullValueHandling.Ignore)]
        public DataTrackingResponseGetMultipleV1?  Data { get; set; }
        public TrackingResponseGetMultipleV1()
        {
        }
    }
    
    /// <summary>
    /// 
    /// </summary>
    public class  DataTrackingResponseGetMultipleV1
    {
        /// <summary>
        ///  Pagination The Pagination holds the information for the pagination when the response contains multiple objects.
        /// </summary>
        [JsonProperty("pagination",NullValueHandling = NullValueHandling.Ignore)]
        public PaginationDataTrackingResponseGetMultipleV1?  Pagination { get; set; }
        /// <summary>
        ///  Trackings Array of 
        /// </summary>
        [JsonProperty("trackings",NullValueHandling = NullValueHandling.Ignore)]
        public Tracking? [] Trackings { get; set; }

        public DataTrackingResponseGetMultipleV1()
        {
        }
    }
    /// <summary>
    /// 
    /// </summary>
    public class  PaginationDataTrackingResponseGetMultipleV1
    {
        /// <summary>
        ///  Total The total number of trackings.
        /// </summary>
        [JsonProperty("total",NullValueHandling = NullValueHandling.Ignore)]
        public int?  Total { get; set; }
        /// <summary>
        ///  NextCursor A string representing the cursor value for the next page of results.
        /// </summary>
        [JsonProperty("next_cursor",NullValueHandling = NullValueHandling.Ignore)]
        public string?  NextCursor { get; set; }
        /// <summary>
        ///  HasNextPage To indicate if next page is available.
        /// </summary>
        [JsonProperty("has_next_page",NullValueHandling = NullValueHandling.Ignore)]
        public bool?  HasNextPage { get; set; }

        public PaginationDataTrackingResponseGetMultipleV1()
        {
        }
    }
}

/*
 * This code was auto generated by AfterShip SDK Generator.
 * Do not edit the class manually.
 */
using System;
using System.Net.Http;

namespace AfterShipTracking
{
    public class LastCheckpointService : BaseResourceService
    {
        IHttpClient HttpClient;

        public LastCheckpointService(IHttpClient httpClient)
        {
            this.HttpClient = httpClient;
        }

        public GetCheckpointByTrackingIdResponse GetCheckpointByTrackingId(
            string trackingId,
            GetCheckpointByTrackingIdOptions? options = null
        )
        {
            string path = $"/tracking/2024-04/last_checkpoint/{trackingId}";
            if (string.IsNullOrEmpty(trackingId))
            {
                throw ErrorCode.GenSDKError(
                    ErrorCode.REQUEST_ERROR,
                    "request error" + ": `tracking_id` is invalid"
                );
            }
            Request request = new Request(HttpMethod.Get, path, options);

            var response = this.HttpClient.MakeRequest(request);
            return ProcessData<GetCheckpointByTrackingIdResponse>(response);
        }

        public GetCheckpointBySlugTrackingNumberResponse GetCheckpointBySlugTrackingNumber(
            string slug,
            string trackingNumber,
            GetCheckpointBySlugTrackingNumberOptions? options = null
        )
        {
            string path = $"/tracking/2024-04/last_checkpoint/{slug}/{trackingNumber}";
            if (string.IsNullOrEmpty(slug))
            {
                throw ErrorCode.GenSDKError(
                    ErrorCode.REQUEST_ERROR,
                    "request error" + ": `slug` is invalid"
                );
            }
            if (string.IsNullOrEmpty(trackingNumber))
            {
                throw ErrorCode.GenSDKError(
                    ErrorCode.REQUEST_ERROR,
                    "request error" + ": `tracking_number` is invalid"
                );
            }
            Request request = new Request(HttpMethod.Get, path, options);

            var response = this.HttpClient.MakeRequest(request);
            return ProcessData<GetCheckpointBySlugTrackingNumberResponse>(response);
        }
    }
}
